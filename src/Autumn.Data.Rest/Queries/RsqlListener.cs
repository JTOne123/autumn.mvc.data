//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.6
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from Rsql.g by ANTLR 4.6

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace Autumn.Data.Rest.Queries {
using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="RsqlParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6")]
[System.CLSCompliant(false)]
public interface IRsqlListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="RsqlParser.eval"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEval([NotNull] RsqlParser.EvalContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RsqlParser.eval"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEval([NotNull] RsqlParser.EvalContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RsqlParser.or"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOr([NotNull] RsqlParser.OrContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RsqlParser.or"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOr([NotNull] RsqlParser.OrContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RsqlParser.and"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAnd([NotNull] RsqlParser.AndContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RsqlParser.and"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAnd([NotNull] RsqlParser.AndContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RsqlParser.constraint"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConstraint([NotNull] RsqlParser.ConstraintContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RsqlParser.constraint"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConstraint([NotNull] RsqlParser.ConstraintContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RsqlParser.group"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGroup([NotNull] RsqlParser.GroupContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RsqlParser.group"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGroup([NotNull] RsqlParser.GroupContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RsqlParser.comparison"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterComparison([NotNull] RsqlParser.ComparisonContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RsqlParser.comparison"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitComparison([NotNull] RsqlParser.ComparisonContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RsqlParser.comparator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterComparator([NotNull] RsqlParser.ComparatorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RsqlParser.comparator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitComparator([NotNull] RsqlParser.ComparatorContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RsqlParser.comp_fiql"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterComp_fiql([NotNull] RsqlParser.Comp_fiqlContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RsqlParser.comp_fiql"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitComp_fiql([NotNull] RsqlParser.Comp_fiqlContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RsqlParser.comp_alt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterComp_alt([NotNull] RsqlParser.Comp_altContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RsqlParser.comp_alt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitComp_alt([NotNull] RsqlParser.Comp_altContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RsqlParser.reserved"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterReserved([NotNull] RsqlParser.ReservedContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RsqlParser.reserved"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitReserved([NotNull] RsqlParser.ReservedContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RsqlParser.unreserved"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUnreserved([NotNull] RsqlParser.UnreservedContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RsqlParser.unreserved"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUnreserved([NotNull] RsqlParser.UnreservedContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RsqlParser.escaped"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEscaped([NotNull] RsqlParser.EscapedContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RsqlParser.escaped"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEscaped([NotNull] RsqlParser.EscapedContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RsqlParser.single_quote"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSingle_quote([NotNull] RsqlParser.Single_quoteContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RsqlParser.single_quote"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSingle_quote([NotNull] RsqlParser.Single_quoteContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RsqlParser.arguments"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArguments([NotNull] RsqlParser.ArgumentsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RsqlParser.arguments"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArguments([NotNull] RsqlParser.ArgumentsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RsqlParser.value"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterValue([NotNull] RsqlParser.ValueContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RsqlParser.value"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitValue([NotNull] RsqlParser.ValueContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RsqlParser.selector"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSelector([NotNull] RsqlParser.SelectorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RsqlParser.selector"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSelector([NotNull] RsqlParser.SelectorContext context);
}
} // namespace Autumn.Data.Rest.Queries
